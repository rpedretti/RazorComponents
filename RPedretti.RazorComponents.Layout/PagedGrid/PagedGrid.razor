@typeparam TItem
@inherits PagedGridBase
@using RPedretti.RazorComponents.Input.Spinner
@using RPedretti.RazorComponents.Layout.Pager

<div class="paged-grid">
    @if (HasContent)
    {
        <Pager MaxIndicators="@MaxIndicators"
               Position="@PagerPosition"
               OnRequestPage="@OnRequestPage"
               CurrentPage="@CurrentPage"
               PageCount="@PageCount"
               Small="@SmallPager"></Pager>
    }
    @if (HasContent && !Loading)
    {
        <ol tabindex="0" aria-label="@A11yLabel" aria-required="false" class="content @ListClasses">
            @for (var i = 0; i < Items.Count(); i++)
            {
                var item = Items.ElementAtOrDefault(i);
                <li class="@ItemClasses">
                    @ItemTemplate(new PagedGridContext { Index = i, Item = item })
                </li>
            }
        </ol>
    }
    else if (Loading)
    {
        <Spinner Active Centered Size="SpinnerSize.LARGE"></Spinner>
    }
    else if (!HasContent)
    {
        <p>@NoContentTemplate</p>
    }
</div>

@functions {
[Parameter] IEnumerable<TItem> Items { get; set; }
[Parameter] RenderFragment<PagedGridContext> ItemTemplate { get; set; }
[Parameter] RenderFragment NoContentTemplate { get; set; }
[Parameter] string ListClasses { get; set; }
[Parameter] string ItemClasses { get; set; }

public class PagedGridContext
{
    public TItem Item { get; set; }
    public int Index { get; set; }
}
}