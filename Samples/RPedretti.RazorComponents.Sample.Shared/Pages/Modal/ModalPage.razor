@page "/modal"
@using RPedretti.RazorComponents.Sample.Shared.Modals.HelloModal
@using RPedretti.RazorComponents.Layout.Services

@inject IModalService ModalService

@{
    ModalContent = @<HelloModal OnClose="Close" />;
}

<div class="modal-page">
    <button class="btn" @onclick="@(() => OpenModal(true))">Open modal with close</button>
    <button class="btn" @onclick="@(() => OpenModal(false))">Open modal without close</button>
    <p>With</p>
    <p>Some</p>
    <p>Scroll</p>
    <p>I</p>
    <p>Don't</p>
    <p>Care</p>
    <p>With</p>
    <p>Modal</p>
    <p>Showing</p>
    <p>1</p>
    <p>2</p>
    <p>3</p>
    <p>4</p>
    <p>5</p>
    <p>6</p>
</div>

@code {
    private RenderFragment ModalContent { get; set; }

    private void Close()
    {
        ModalService.Hide();
    }

    public void OpenModal(bool overlayClose)
    {
        ModalService.Show(new Layout.Models.ModalConfig
        {
            CloseOnOverlayClick = overlayClose,
            Content = ModalContent
        });
    }
}
